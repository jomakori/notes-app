#  ┌────────────────────────────────────────────────────────────────────────────────────────────────────────┐
#  │ Purpose:                                                                                               │
#  │ - Runs checks on commits from feature branches, including:                                             │
#  │    - Placing a label on PR                                                                             │
#  │    - Running lint checks on each commit                                                                │
#  │    - Check for existing Release PR that are open on staging                                            │
#  │ - When changes are good, merge to staging queue to run testing (or trigger testing manually):                                        │
#  │    - If testing is good -> Merge to staging branch                                                     │
#  │    - Else               -> reject PR - user will correct errors and resubmit PR to the staging queue   │
#  └────────────────────────────────────────────────────────────────────────────────────────────────────────┘

name: 0 - Validate & Test

# Pipeline permissions
permissions:
  contents: read
  pull-requests: write
  issues: read

# When to run:
on:
  ## Trigger Jobs on PR
  pull_request:
    branches:
      - staging
      - main
    types:
      - opened
      - synchronize
      - edited
  ## Trigger Jobs on Merge Queue
  merge_group:
    types:
      - checks_requested
  ## Trigger Jobs manually
  workflow_dispatch:

# Jobs to Run:
jobs:
  # ┌─────────────────────────────────────────────────────────────────────────────┐
  # │   Run jobs for commits to WIP PR                                            │
  # └─────────────────────────────────────────────────────────────────────────────┘
  label-pr:
    name: Label PR
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/labeler@v5
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@main
        with:
          lfs: true

      - name: DevBox - Install
        uses: jetify-com/devbox-install-action@main
        with:
          enable-cache: 'true'

      - name: Pre-commit - Lint Testing (via Devbox)
        run: devbox run pre-commit
        id: precommit

      - name: Comment on PR
        uses: mshick/add-pr-comment@main
        with:
          message: |
            ## Lint Checks passed ✅
            > Note: If this is a `WIP` PR - make sure this PR is pointed to the `staging` branch.
            When you merge the PR, `testing` will trigger - otherwise it can be manually triggered via the UI

      - name: Fail-catch - Pre-commit Checks
        if: ${{ failure() && steps.precommit.outcome == 'failure' }}
        uses: actions/github-script@main
        with:
          script: |
            core.setFailed("Run `pre-commit run -a` to fix errors locally before re-committing")

  # ┌─────────────────────────────────────────────────────────────────────────────┐
  # │   Run jobs on Merge Queue or PR Comment 'test'                              │
  # └─────────────────────────────────────────────────────────────────────────────┘
  check_existing_pr:
    name: Check for existing Release PR
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'merge_group' && github.event.action == 'enqueued')
    runs-on: ubuntu-latest
    steps:
      - name: Check - Active Release PRs
        uses: juliangruber/find-pull-request-action@v1
        id: find-prs
        with:
          branch: staging
          state: open

      - name: Confirm/Deny Merge
        run: |
          if [ -n "${{ steps.find-prs.outputs.number }}" ]; then
            echo "Merge is rejected - There is Release PR #${{ steps.find-prs.outputs.number }} currently on staging."
            echo "Please merge or close it before merging into this branch - to prevent piling commits to a single PR"
            echo "Note: If you want to update existing PR - you must send the commit back to it's feature branch and undo commit on staging"
            exit 1
          else
            echo "Changes are ready for merge..."
          fi

  test:
    name: Test Changes
    needs: check_existing_pr
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@main
        with:
          lfs: true

      - name: Install Doppler CLI
        uses: dopplerhq/cli-action@v3
        with:
          doppler-token: ${{ secrets.DEV_DOPPLER_TOKEN }}

      - name: Fetch Doppler Secrets
        id: doppler
        uses: dopplerhq/secrets-fetch-action@main
        with:
          doppler-token: ${{ secrets.DEV_DOPPLER_TOKEN }}
          inject-env-vars: true

  # ┌───────────────────────────────────────────────────────────────────────┐
  # │ Install Dependencies                                                  │
  # └───────────────────────────────────────────────────────────────────────┘
      - name: DevBox - Install
        uses: jetify-com/devbox-install-action@main
        with:
          enable-cache: 'true'

  # ┌──────────────────────────────────────────────────────────────────────────┐
  # │ Perform testing                                                          │
  # └──────────────────────────────────────────────────────────────────────────┘
      # Note: Devbox reads env vars - dumped by Doppler
      - name: Backend - Perform Testing
        run: devbox run test_be
        env:
          DOPPLER_TOKEN: ${{ secrets.DEV_DOPPLER_TOKEN }}

      - name: Frontend - Perform Testing
        run: devbox run test_fe

  # ┌───────────────────────────────────────────────────────────────────────┐
  # │ Post Results                                                          │
  # └───────────────────────────────────────────────────────────────────────┘
      - name: Publish Test Results
        id: test-report
        uses: dorny/test-reporter@main
        if: success() || failure()  # Produce test report, pass or fail
        with:
          name: Test Results # Name of the check run which will be created
          path: "**/test-results/*.xml" # Path to test results
          reporter: jest-junit # Use jest-junit for frontend tests
          fail-on-error: "false"
